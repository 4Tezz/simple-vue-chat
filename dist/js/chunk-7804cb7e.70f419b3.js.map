{"version":3,"sources":["webpack:///./src/app/shared/views/Chats.vue","webpack:///./src/app/shared/components/ui/AppChat.vue","webpack:///./src/app/shared/components/complement/OutgoingChats.vue","webpack:///./src/app/shared/components/complement/OutgoingChats.vue?2602","webpack:///./src/app/shared/components/ui/AppPrint.vue","webpack:///./src/app/shared/components/ui/AppPrint.vue?b2b5","webpack:///./src/app/shared/components/ui/AppChat.vue?546b","webpack:///./src/app/shared/views/Chats.vue?77cf","webpack:///./node_modules/core-js/modules/es.function.name.js"],"names":["class","chats","el","key","src","avatar","alt","name","messages","chat","id","print","ourAvatar","addMessage","type","placeholder","text","props","state","render","__scopeId","setup","store","validate","value","commit","getters","ourId","components","OutgoingChats","AppPrint","AppChat","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","call","this","match","error"],"mappings":"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","file":"js/chunk-7804cb7e.70f419b3.js","sourcesContent":["<template>\r\n<div class=\"message with-nav\">\r\n  <div class=\"wrapper\">\r\n     <app-chat :chats=\"el\" v-for=\"el in chats\" :key=\"el\"></app-chat>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport AppChat from './../components/ui/AppChat.vue'\r\nimport {ref} from 'vue'\r\n    export default { \r\n      setup() {\r\n        const chats = ref([\r\n          {id: 'chat1' , avatar: 'https://shapka-youtube.ru/wp-content/uploads/2020/12/man-ava4.jpg' , name: 'Alex' , ourId: 'chat2' , ourAvatar: 'https://klike.net/uploads/posts/2019-03/1551514041_16.jpg' },\r\n          {id: 'chat2' , avatar: 'https://klike.net/uploads/posts/2019-03/1551514041_16.jpg' , name: 'Other users' , ourId: 'chat1' , ourAvatar: 'https://shapka-youtube.ru/wp-content/uploads/2020/12/man-ava4.jpg'}\r\n        ])\r\n        return {chats}\r\n      },\r\n      components: {AppChat}\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","<template>\r\n <div class=\"chat-container\">\r\n     <div class=\"chat-header\">\r\n       <div class=\"chat-header-img\">\r\n         <img :src=\"chats.avatar\" alt=\"avatar\">\r\n       </div>\r\n       <div class=\"active-chat\">\r\n         <h4> {{chats.name}} </h4>\r\n       </div>\r\n     </div>\r\n     <div class=\"chat-page\">\r\n       <div class=\"msg-inbox\">\r\n         <div class=\"chats\">\r\n           <div class=\"msg-page\"> \r\n                <outgoing-chats v-for=\"el in messages\" :key=\"el\" :chat=\"el\" :id=\"chats.id\"></outgoing-chats>\r\n                <app-print v-if=\"print\" :avatar=\"chats.ourAvatar\"></app-print>\r\n           </div>\r\n         </div>\r\n       </div>\r\n         <div class=\"msg-bottom\">\r\n             <form class=\"input-group\" @submit.prevent=\"addMessage\">\r\n               <div class=\"form-control\">\r\n                   <textarea type=\"text\" placeholder=\"Написать сообщение...\" v-model=\"text\" ></textarea>\r\n               </div>\r\n               <button class=\"btn send\">Отправить</button>\r\n             </form>\r\n         </div>\r\n     </div>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\nimport OutgoingChats from './../complement/OutgoingChats.vue'\r\nimport { computed , ref , watch , onUnmounted} from '@vue/runtime-core';\r\nimport { useStore } from 'vuex';\r\nimport AppPrint from './AppPrint.vue';\r\n    export default {\r\n        props: ['chats'],\r\n        setup(props) {\r\n            const store = useStore()\r\n           \r\n            const validate = computed(() => text.value !== '' && text.value !== null)\r\n  \r\n            const text = ref('')\r\n\r\n            const addMessage = () => {\r\n              if(validate.value) {\r\n                store.commit('chatMessages/addMessage' , { id: props.chats.id, avatar: props.chats.avatar , text: text.value, name: props.chats.name })\r\n                text.value = null\r\n              }\r\n            }\r\n            watch( validate , () =>  store.commit('chatMessages/changePrints' , props.chats.id))\r\n            onUnmounted(() => store.commit('chatMessages/unmountedPrints' , props.chats.id))\r\n            const print = computed(() => store.getters['chatMessages/getPrints'][props.chats.ourId])\r\n            const messages = computed(() => store.getters['chatMessages/getMessages'])\r\n            return {messages , text , addMessage , print}\r\n        },\r\n        components : { OutgoingChats, AppPrint}\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","<template>\r\n             <div :class=\"chat.id !== id ? 'received-chats' : 'outgoing-chats'\">\r\n\r\n                <div class=\"outgoing-chats-msg\" v-if=\"chat.id == id\">\r\n                    <p> {{ chat.text }} </p>\r\n                </div>\r\n\r\n                <div :class=\"chat.id !== id ? 'received-chats-img'  : 'outgoing-chats-img'\">\r\n                 <img :src=\"chat.avatar\">\r\n               </div>\r\n               \r\n                 <div class=\"received-msg\" v-if=\"chat.id !== id\">\r\n                  <div class=\"received-msg-inbox\">\r\n                    <p> {{ chat.text }} </p>\r\n                  </div>\r\n                </div>\r\n             </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: ['chat' , 'id'],\r\n        state(props) {\r\n            return {}\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","import { render } from \"./OutgoingChats.vue?vue&type=template&id=4d5b5ba6&scoped=true\"\nimport script from \"./OutgoingChats.vue?vue&type=script&lang=js\"\nexport * from \"./OutgoingChats.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-4d5b5ba6\"\n\nexport default script","<template>\r\n  <div class=\"received-chats\">\r\n    <div class=\"received-chats-img\">\r\n      <img :src=\"avatar\" />\r\n    </div>\r\n    <div class=\"received-msg\">\r\n      <div class=\"received-msg-inbox\">\r\n        <div class=\"sc-typing-indicator\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['avatar']\r\n};\r\n</script>\r\n\r\n<style  scoped>\r\n</style>","import { render } from \"./AppPrint.vue?vue&type=template&id=6ed78377&scoped=true\"\nimport script from \"./AppPrint.vue?vue&type=script&lang=js\"\nexport * from \"./AppPrint.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-6ed78377\"\n\nexport default script","import { render } from \"./AppChat.vue?vue&type=template&id=1d8d0f23&scoped=true\"\nimport script from \"./AppChat.vue?vue&type=script&lang=js\"\nexport * from \"./AppChat.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-1d8d0f23\"\n\nexport default script","import { render } from \"./Chats.vue?vue&type=template&id=ecd170f6&scoped=true\"\nimport script from \"./Chats.vue?vue&type=script&lang=js\"\nexport * from \"./Chats.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-ecd170f6\"\n\nexport default script","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"],"sourceRoot":""}